--------------
DROP DATABASE IF EXISTS RANDOM_TEST
--------------

Query OK, 0 rows affected 

--------------
CREATE DATABASE RANDOM_TEST
--------------

Query OK, 0 rows affected 

--------------
DROP TABLE IF EXISTS T1
--------------

Query OK, 0 rows affected 

--------------
CREATE TABLE T1(C1 NUMERIC, C2 NUMERIC, C3 NUMERIC, C4 NUMERIC)
--------------

Query OK, 0 rows affected 

--------------
INSERT INTO T1 VALUES(59, 52, 35, 3)
--------------

Query OK, 0 rows affected 

--------------
INSERT INTO T1 VALUES(80, 35, 72, 32)
--------------

Query OK, 0 rows affected 

--------------
INSERT INTO T1 VALUES(53, 26, 60, 85)
--------------

Query OK, 0 rows affected 

--------------
INSERT INTO T1 VALUES(66, 57, 1, 89)
--------------

Query OK, 0 rows affected 

--------------
INSERT INTO T1 VALUES(20, 36, 28, 72)
--------------

Query OK, 0 rows affected 

--------------
INSERT INTO T1 VALUES(30, 9, 41, 50)
--------------

Query OK, 0 rows affected 

--------------
INSERT INTO T1 VALUES(15, 22, 55, 83)
--------------

Query OK, 0 rows affected 

--------------
INSERT INTO T1 VALUES(36, 15, 37, 95)
--------------

Query OK, 0 rows affected 

--------------
INSERT INTO T1 VALUES(19, 24, 51, 51)
--------------

Query OK, 0 rows affected 

--------------
INSERT INTO T1 VALUES(59, 23, 36, 64)
--------------

Query OK, 0 rows affected 

--------------
EXPLAIN SELECT DISTINCT 39 AS C1, 69 AS C2, T1.C2 AS C3, T1.C2 AS C4 FROM T1 T1    ORDER BY 1 ASC ,2 DESC ,3 ASC ,4 DESC
--------------

Query OK, 0 rows affected 
QUERY PLAN:
+---------------------------------------------+
| ID | OPERATOR     | NAME | ROW COUNT | COST |
+---------------------------------------------+
| 0  | SORT         |      | 0         | 0    |
| 1  |  DISTINCT    |      | 0         | 0    |
| 2  |   TABLE SCAN | T1   | 0         | 0    |
+---------------------------------------------+
OUTPUT EXPR:
0 - output expr:[39,69,t1.c2,t1.c2]
 sort keys:39 ASC,69 DESC,t1.c2 ASC,t1.c2 DESC
1 - output expr:[t1.c2,t1.c2]
 
2 - output expr:[t1.c2,t1.c2]
 access:[t1.c2]
 


--------------
SELECT DISTINCT 39 AS C1, 69 AS C2, T1.C2 AS C3, T1.C2 AS C4 FROM T1 T1    ORDER BY 1 ASC ,2 DESC ,3 ASC ,4 DESC
--------------

+------+------+------+------+
| c1   | c2   | c3   | c4   |
+------+------+------+------+
| 39   | 69   | 9    | 9    |
| 39   | 69   | 15   | 15   |
| 39   | 69   | 22   | 22   |
| 39   | 69   | 23   | 23   |
| 39   | 69   | 24   | 24   |
| 39   | 69   | 26   | 26   |
| 39   | 69   | 35   | 35   |
| 39   | 69   | 36   | 36   |
| 39   | 69   | 52   | 52   |
| 39   | 69   | 57   | 57   |
+------+------+------+------+
10 rows in set 

--------------
EXPLAIN SELECT DISTINCT T1.C1 AS C1, (T1.C4 * 96) AS C2, 93 / T1.C3 AS C3, T1.C4 AS C4 FROM T1 T1    ORDER BY 1 DESC ,2 ASC ,3 ASC ,4 DESC
--------------

Query OK, 0 rows affected 
QUERY PLAN:
+---------------------------------------------+
| ID | OPERATOR     | NAME | ROW COUNT | COST |
+---------------------------------------------+
| 0  | SORT         |      | 0         | 0    |
| 1  |  DISTINCT    |      | 0         | 0    |
| 2  |   TABLE SCAN | T1   | 0         | 0    |
+---------------------------------------------+
OUTPUT EXPR:
0 - output expr:[t1.c1,t1.c4*96,93/t1.c3,t1.c4]
 sort keys:t1.c1 DESC,t1.c4*96 ASC,93/t1.c3 ASC,t1.c4 DESC
1 - output expr:[t1.c1,t1.c4*96,93/t1.c3,t1.c4]
 
2 - output expr:[t1.c1,t1.c4*96,93/t1.c3,t1.c4]
 access:[t1.c1,t1.c4,t1.c3]
 


--------------
SELECT DISTINCT T1.C1 AS C1, (T1.C4 * 96) AS C2, 93 / T1.C3 AS C3, T1.C4 AS C4 FROM T1 T1    ORDER BY 1 DESC ,2 ASC ,3 ASC ,4 DESC
--------------

+------+------+------+------+
| c1   | c2   | c3   | c4   |
+------+------+------+------+
| 80   | 3072 | 1    | 32   |
| 66   | 8544 | 93   | 89   |
| 59   | 288  | 2    | 3    |
| 59   | 6144 | 2    | 64   |
| 53   | 8160 | 1    | 85   |
| 36   | 9120 | 2    | 95   |
| 30   | 4800 | 2    | 50   |
| 20   | 6912 | 3    | 72   |
| 19   | 4896 | 1    | 51   |
| 15   | 7968 | 1    | 83   |
+------+------+------+------+
10 rows in set 

--------------
EXPLAIN SELECT DISTINCT 10 AS C1, T1.C3 - (T1.C3 * 59) + (T1.C3 - 21) - T1.C3 * (((54 * ((T1.C3 - T1.C4) - (T1.C3 - ((T1.C1 * T1.C2 - T1.C4) * T1.C2 + 49 * (31 - T1.C2) / T1.C2 * (T1.C2 + 22 - T1.C3) * T1.C1 + T1.C1 / T1.C3 * T1.C3 + T1.C1)))) * T1.C4 + T1.C3 * (T1.C4 - T1.C4 + (T1.C3 / (T1.C2 - T1.C3 / T1.C4 + T1.C2 - T1.C4 * T1.C3) * (T1.C4 - T1.C4 * T1.C2)) / T1.C1 - (T1.C3 * T1.C2 - T1.C3 / T1.C1 / ((T1.C3 - (T1.C2 / 29) / 4) + T1.C4 + T1.C3 - T1.C2)) * (((((T1.C4 - T1.C2 - T1.C2 / (T1.C3 * T1.C2 + 90 * T1.C1 - T1.C4)) / T1.C3) - ((8 - ((T1.C2 / (((T1.C1 - 46) * (T1.C1 * T1.C1 + 14 * (T1.C3 * 8 * (((((((3 / T1.C1 + T1.C1 - 55 * (T1.C4 / 74)) + (T1.C2 * 0)) / (T1.C3 - (T1.C3 * T1.C2 * T1.C1 - (T1.C3 / 66) - T1.C2 - ((T1.C1 / T1.C2) * (((T1.C4 + 58) / (T1.C2 * T1.C2)) - T1.C3))) - T1.C2 * T1.C1 * ((T1.C3 * T1.C1 / T1.C3 * T1.C2) - 85) / T1.C3)) + T1.C3 * T1.C4 + T1.C3 * T1.C4 * T1.C3) - T1.C2 * T1.C4) * (T1.C3 / T1.C4 - (72 / ((T1.C2 - 22) + T1.C2)))) * T1.C3) + (T1.C4 - T1.C3)) / T1.C1)) / T1.C1 / T1.C1)) * T1.C1 * T1.C1 * T1.C2)) / T1.C2)) - T1.C3 - 11 * T1.C2) * T1.C4 * ((T1.C3 / (60 + (T1.C2 / T1.C3) / T1.C2 / T1.C3) * T1.C2) + T1.C4) - T1.C2 / T1.C4 * T1.C2 - T1.C4)) / 83) + (((99 + (T1.C4 / (77 - (T1.C1 / 71 / T1.C2 + T1.C3 - T1.C4))) + T1.C4 * 94 / T1.C2) + T1.C1) - T1.C2) - T1.C3) AS C2, 87 AS C3, 35 AS C4 FROM T1 T1    ORDER BY 1 ASC ,2 ASC ,3 ASC ,4 ASC
--------------

Query OK, 0 rows affected 
QUERY PLAN:
+---------------------------------------------+
| ID | OPERATOR     | NAME | ROW COUNT | COST |
+---------------------------------------------+
| 0  | SORT         |      | 0         | 0    |
| 1  |  DISTINCT    |      | 0         | 0    |
| 2  |   TABLE SCAN | T1   | 0         | 0    |
+---------------------------------------------+
OUTPUT EXPR:
0 - output expr:[10,t1.c3-t1.c3*59+t1.c3-21-t1.c3*54*t1.c3-t1.c4-t1.c3-t1.c1*t1.c2-t1.c4*t1.c2+49*31-t1.c2/t1.c2*t1.c2+22-t1.c3*t1.c1+t1.c1/t1.c3*t1.c3+t1.c1*t1.c4+t1.c3*t1.c4-t1.c4+t1.c3/t1.c2-t1.c3/t1.c4+t1.c2-t1.c4*t1.c3*t1.c4-t1.c4*t1.c2/t1.c1-t1.c3*t1.c2-t1.c3/t1.c1/t1.c3-t1.c2/29/4+t1.c4+t1.c3-t1.c2*t1.c4-t1.c2-t1.c2/t1.c3*t1.c2+90*t1.c1-t1.c4/t1.c3-8-t1.c2/t1.c1-46*t1.c1*t1.c1+14*t1.c3*8*3/t1.c1+t1.c1-55*t1.c4/74+t1.c2*0/t1.c3-t1.c3*t1.c2*t1.c1-t1.c3/66-t1.c2-t1.c1/t1.c2*t1.c4+58/t1.c2*t1.c2-t1.c3-t1.c2*t1.c1*t1.c3*t1.c1/t1.c3*t1.c2-85/t1.c3+t1.c3*t1.c4+t1.c3*t1.c4*t1.c3-t1.c2*t1.c4*t1.c3/t1.c4-72/t1.c2-22+t1.c2*t1.c3+t1.c4-t1.c3/t1.c1/t1.c1/t1.c1*t1.c1*t1.c1*t1.c2/t1.c2-t1.c3-11*t1.c2*t1.c4*t1.c3/60+t1.c2/t1.c3/t1.c2/t1.c3*t1.c2+t1.c4-t1.c2/t1.c4*t1.c2-t1.c4/83+99+t1.c4/77-t1.c1/71/t1.c2+t1.c3-t1.c4+t1.c4*94/t1.c2+t1.c1-t1.c2-t1.c3,87,35]
 sort keys:10 ASC,t1.c3-t1.c3*59+t1.c3-21-t1.c3*54*t1.c3-t1.c4-t1.c3-t1.c1*t1.c2-t1.c4*t1.c2+49*31-t1.c2/t1.c2*t1.c2+22-t1.c3*t1.c1+t1.c1/t1.c3*t1.c3+t1.c1*t1.c4+t1.c3*t1.c4-t1.c4+t1.c3/t1.c2-t1.c3/t1.c4+t1.c2-t1.c4*t1.c3*t1.c4-t1.c4*t1.c2/t1.c1-t1.c3*t1.c2-t1.c3/t1.c1/t1.c3-t1.c2/29/4+t1.c4+t1.c3-t1.c2*t1.c4-t1.c2-t1.c2/t1.c3*t1.c2+90*t1.c1-t1.c4/t1.c3-8-t1.c2/t1.c1-46*t1.c1*t1.c1+14*t1.c3*8*3/t1.c1+t1.c1-55*t1.c4/74+t1.c2*0/t1.c3-t1.c3*t1.c2*t1.c1-t1.c3/66-t1.c2-t1.c1/t1.c2*t1.c4+58/t1.c2*t1.c2-t1.c3-t1.c2*t1.c1*t1.c3*t1.c1/t1.c3*t1.c2-85/t1.c3+t1.c3*t1.c4+t1.c3*t1.c4*t1.c3-t1.c2*t1.c4*t1.c3/t1.c4-72/t1.c2-22+t1.c2*t1.c3+t1.c4-t1.c3/t1.c1/t1.c1/t1.c1*t1.c1*t1.c1*t1.c2/t1.c2-t1.c3-11*t1.c2*t1.c4*t1.c3/60+t1.c2/t1.c3/t1.c2/t1.c3*t1.c2+t1.c4-t1.c2/t1.c4*t1.c2-t1.c4/83+99+t1.c4/77-t1.c1/71/t1.c2+t1.c3-t1.c4+t1.c4*94/t1.c2+t1.c1-t1.c2-t1.c3 ASC,87 ASC,35 ASC
1 - output expr:[t1.c3-t1.c3*59+t1.c3-21-t1.c3*54*t1.c3-t1.c4-t1.c3-t1.c1*t1.c2-t1.c4*t1.c2+49*31-t1.c2/t1.c2*t1.c2+22-t1.c3*t1.c1+t1.c1/t1.c3*t1.c3+t1.c1*t1.c4+t1.c3*t1.c4-t1.c4+t1.c3/t1.c2-t1.c3/t1.c4+t1.c2-t1.c4*t1.c3*t1.c4-t1.c4*t1.c2/t1.c1-t1.c3*t1.c2-t1.c3/t1.c1/t1.c3-t1.c2/29/4+t1.c4+t1.c3-t1.c2*t1.c4-t1.c2-t1.c2/t1.c3*t1.c2+90*t1.c1-t1.c4/t1.c3-8-t1.c2/t1.c1-46*t1.c1*t1.c1+14*t1.c3*8*3/t1.c1+t1.c1-55*t1.c4/74+t1.c2*0/t1.c3-t1.c3*t1.c2*t1.c1-t1.c3/66-t1.c2-t1.c1/t1.c2*t1.c4+58/t1.c2*t1.c2-t1.c3-t1.c2*t1.c1*t1.c3*t1.c1/t1.c3*t1.c2-85/t1.c3+t1.c3*t1.c4+t1.c3*t1.c4*t1.c3-t1.c2*t1.c4*t1.c3/t1.c4-72/t1.c2-22+t1.c2*t1.c3+t1.c4-t1.c3/t1.c1/t1.c1/t1.c1*t1.c1*t1.c1*t1.c2/t1.c2-t1.c3-11*t1.c2*t1.c4*t1.c3/60+t1.c2/t1.c3/t1.c2/t1.c3*t1.c2+t1.c4-t1.c2/t1.c4*t1.c2-t1.c4/83+99+t1.c4/77-t1.c1/71/t1.c2+t1.c3-t1.c4+t1.c4*94/t1.c2+t1.c1-t1.c2-t1.c3]
 
2 - output expr:[t1.c3-t1.c3*59+t1.c3-21-t1.c3*54*t1.c3-t1.c4-t1.c3-t1.c1*t1.c2-t1.c4*t1.c2+49*31-t1.c2/t1.c2*t1.c2+22-t1.c3*t1.c1+t1.c1/t1.c3*t1.c3+t1.c1*t1.c4+t1.c3*t1.c4-t1.c4+t1.c3/t1.c2-t1.c3/t1.c4+t1.c2-t1.c4*t1.c3*t1.c4-t1.c4*t1.c2/t1.c1-t1.c3*t1.c2-t1.c3/t1.c1/t1.c3-t1.c2/29/4+t1.c4+t1.c3-t1.c2*t1.c4-t1.c2-t1.c2/t1.c3*t1.c2+90*t1.c1-t1.c4/t1.c3-8-t1.c2/t1.c1-46*t1.c1*t1.c1+14*t1.c3*8*3/t1.c1+t1.c1-55*t1.c4/74+t1.c2*0/t1.c3-t1.c3*t1.c2*t1.c1-t1.c3/66-t1.c2-t1.c1/t1.c2*t1.c4+58/t1.c2*t1.c2-t1.c3-t1.c2*t1.c1*t1.c3*t1.c1/t1.c3*t1.c2-85/t1.c3+t1.c3*t1.c4+t1.c3*t1.c4*t1.c3-t1.c2*t1.c4*t1.c3/t1.c4-72/t1.c2-22+t1.c2*t1.c3+t1.c4-t1.c3/t1.c1/t1.c1/t1.c1*t1.c1*t1.c1*t1.c2/t1.c2-t1.c3-11*t1.c2*t1.c4*t1.c3/60+t1.c2/t1.c3/t1.c2/t1.c3*t1.c2+t1.c4-t1.c2/t1.c4*t1.c2-t1.c4/83+99+t1.c4/77-t1.c1/71/t1.c2+t1.c3-t1.c4+t1.c4*94/t1.c2+t1.c1-t1.c2-t1.c3]
 access:[t1.c3,t1.c4,t1.c1,t1.c2]
 


--------------
SELECT DISTINCT 10 AS C1, T1.C3 - (T1.C3 * 59) + (T1.C3 - 21) - T1.C3 * (((54 * ((T1.C3 - T1.C4) - (T1.C3 - ((T1.C1 * T1.C2 - T1.C4) * T1.C2 + 49 * (31 - T1.C2) / T1.C2 * (T1.C2 + 22 - T1.C3) * T1.C1 + T1.C1 / T1.C3 * T1.C3 + T1.C1)))) * T1.C4 + T1.C3 * (T1.C4 - T1.C4 + (T1.C3 / (T1.C2 - T1.C3 / T1.C4 + T1.C2 - T1.C4 * T1.C3) * (T1.C4 - T1.C4 * T1.C2)) / T1.C1 - (T1.C3 * T1.C2 - T1.C3 / T1.C1 / ((T1.C3 - (T1.C2 / 29) / 4) + T1.C4 + T1.C3 - T1.C2)) * (((((T1.C4 - T1.C2 - T1.C2 / (T1.C3 * T1.C2 + 90 * T1.C1 - T1.C4)) / T1.C3) - ((8 - ((T1.C2 / (((T1.C1 - 46) * (T1.C1 * T1.C1 + 14 * (T1.C3 * 8 * (((((((3 / T1.C1 + T1.C1 - 55 * (T1.C4 / 74)) + (T1.C2 * 0)) / (T1.C3 - (T1.C3 * T1.C2 * T1.C1 - (T1.C3 / 66) - T1.C2 - ((T1.C1 / T1.C2) * (((T1.C4 + 58) / (T1.C2 * T1.C2)) - T1.C3))) - T1.C2 * T1.C1 * ((T1.C3 * T1.C1 / T1.C3 * T1.C2) - 85) / T1.C3)) + T1.C3 * T1.C4 + T1.C3 * T1.C4 * T1.C3) - T1.C2 * T1.C4) * (T1.C3 / T1.C4 - (72 / ((T1.C2 - 22) + T1.C2)))) * T1.C3) + (T1.C4 - T1.C3)) / T1.C1)) / T1.C1 / T1.C1)) * T1.C1 * T1.C1 * T1.C2)) / T1.C2)) - T1.C3 - 11 * T1.C2) * T1.C4 * ((T1.C3 / (60 + (T1.C2 / T1.C3) / T1.C2 / T1.C3) * T1.C2) + T1.C4) - T1.C2 / T1.C4 * T1.C2 - T1.C4)) / 83) + (((99 + (T1.C4 / (77 - (T1.C1 / 71 / T1.C2 + T1.C3 - T1.C4))) + T1.C4 * 94 / T1.C2) + T1.C1) - T1.C2) - T1.C3) AS C2, 87 AS C3, 35 AS C4 FROM T1 T1    ORDER BY 1 ASC ,2 ASC ,3 ASC ,4 ASC
--------------

+------+---------------+------+------+
| c1   | c2            | c3   | c4   |
+------+---------------+------+------+
| 10   | -228564371421 | 87   | 35   |
| 10   | -167041049421 | 87   | 35   |
| 10   | -90437996571  | 87   | 35   |
| 10   | -32602282359  | 87   | 35   |
| 10   | -23021421661  | 87   | 35   |
| 10   | -20079208965  | 87   | 35   |
| 10   | -17779932513  | 87   | 35   |
| 10   | -827130521    | 87   | 35   |
| 10   | -417944329    | 87   | 35   |
| 10   | 1137624232    | 87   | 35   |
+------+---------------+------+------+
10 rows in set 

--------------
EXPLAIN SELECT DISTINCT T1.C1 AS C1, T1.C1 AS C2, ((T1.C1 * T1.C4) - T1.C2 + 73 + T1.C3 / (T1.C2 * 77 / T1.C4 / (11 * T1.C1 * (((T1.C4 / T1.C1 + T1.C4) * ((79 + (T1.C1 / T1.C3) + (T1.C2 * T1.C4 - (T1.C4 / ((T1.C4 + T1.C1) * (T1.C1 + (T1.C3 - 23 + T1.C4) - 33))) - T1.C3 - 2)) + T1.C1 * T1.C1 - (T1.C4 / (14 - T1.C3 - 3)) * (T1.C2 - (86 / 88) * T1.C4)) + 97 - (98 * (T1.C4 * T1.C4) + (T1.C1 - 65 + T1.C4 * T1.C3))) - (((15 / (T1.C1 * T1.C3)) + T1.C3 * (88 * (T1.C2 + T1.C2))) / ((T1.C3 / 42) - T1.C4 / ((T1.C4 - 79 - T1.C1) / ((T1.C2 + T1.C4 - T1.C2 - T1.C2) * 51 - (T1.C1 + T1.C1))) / T1.C1) + T1.C1) + (((75 - ((T1.C2 * 5) + (T1.C4 / T1.C1))) * T1.C2) - T1.C2 * T1.C3))))) AS C3, T1.C3 AS C4 FROM T1 T1    ORDER BY 1 ASC ,2 ASC ,3 ASC ,4 DESC
--------------

Query OK, 0 rows affected 
QUERY PLAN:
+---------------------------------------------+
| ID | OPERATOR     | NAME | ROW COUNT | COST |
+---------------------------------------------+
| 0  | SORT         |      | 0         | 0    |
| 1  |  DISTINCT    |      | 0         | 0    |
| 2  |   TABLE SCAN | T1   | 0         | 0    |
+---------------------------------------------+
OUTPUT EXPR:
0 - output expr:[t1.c1,t1.c1,t1.c1*t1.c4-t1.c2+73+t1.c3/t1.c2*77/t1.c4/11*t1.c1*t1.c4/t1.c1+t1.c4*79+t1.c1/t1.c3+t1.c2*t1.c4-t1.c4/t1.c4+t1.c1*t1.c1+t1.c3-23+t1.c4-33-t1.c3-2+t1.c1*t1.c1-t1.c4/14-t1.c3-3*t1.c2-86/88*t1.c4+97-98*t1.c4*t1.c4+t1.c1-65+t1.c4*t1.c3-15/t1.c1*t1.c3+t1.c3*88*t1.c2+t1.c2/t1.c3/42-t1.c4/t1.c4-79-t1.c1/t1.c2+t1.c4-t1.c2-t1.c2*51-t1.c1+t1.c1/t1.c1+t1.c1+75-t1.c2*5+t1.c4/t1.c1*t1.c2-t1.c2*t1.c3,t1.c3]
 sort keys:t1.c1 ASC,t1.c1 ASC,t1.c1*t1.c4-t1.c2+73+t1.c3/t1.c2*77/t1.c4/11*t1.c1*t1.c4/t1.c1+t1.c4*79+t1.c1/t1.c3+t1.c2*t1.c4-t1.c4/t1.c4+t1.c1*t1.c1+t1.c3-23+t1.c4-33-t1.c3-2+t1.c1*t1.c1-t1.c4/14-t1.c3-3*t1.c2-86/88*t1.c4+97-98*t1.c4*t1.c4+t1.c1-65+t1.c4*t1.c3-15/t1.c1*t1.c3+t1.c3*88*t1.c2+t1.c2/t1.c3/42-t1.c4/t1.c4-79-t1.c1/t1.c2+t1.c4-t1.c2-t1.c2*51-t1.c1+t1.c1/t1.c1+t1.c1+75-t1.c2*5+t1.c4/t1.c1*t1.c2-t1.c2*t1.c3 ASC,t1.c3 DESC
1 - output expr:[t1.c1,t1.c1,t1.c3]
 
2 - output expr:[t1.c1,t1.c1,t1.c3]
 access:[t1.c1,t1.c4,t1.c2,t1.c3]
 


--------------
SELECT DISTINCT T1.C1 AS C1, T1.C1 AS C2, ((T1.C1 * T1.C4) - T1.C2 + 73 + T1.C3 / (T1.C2 * 77 / T1.C4 / (11 * T1.C1 * (((T1.C4 / T1.C1 + T1.C4) * ((79 + (T1.C1 / T1.C3) + (T1.C2 * T1.C4 - (T1.C4 / ((T1.C4 + T1.C1) * (T1.C1 + (T1.C3 - 23 + T1.C4) - 33))) - T1.C3 - 2)) + T1.C1 * T1.C1 - (T1.C4 / (14 - T1.C3 - 3)) * (T1.C2 - (86 / 88) * T1.C4)) + 97 - (98 * (T1.C4 * T1.C4) + (T1.C1 - 65 + T1.C4 * T1.C3))) - (((15 / (T1.C1 * T1.C3)) + T1.C3 * (88 * (T1.C2 + T1.C2))) / ((T1.C3 / 42) - T1.C4 / ((T1.C4 - 79 - T1.C1) / ((T1.C2 + T1.C4 - T1.C2 - T1.C2) * 51 - (T1.C1 + T1.C1))) / T1.C1) + T1.C1) + (((75 - ((T1.C2 * 5) + (T1.C4 / T1.C1))) * T1.C2) - T1.C2 * T1.C3))))) AS C3, T1.C3 AS C4 FROM T1 T1    ORDER BY 1 ASC ,2 ASC ,3 ASC ,4 DESC
--------------

+------+------+-----------------------+------+
| c1   | c2   | c3                    | c4   |
+------+------+-----------------------+------+
| 15   | 15   | operation not support | 55   |
| 19   | 19   | operation not support | 51   |
| 20   | 20   | operation not support | 28   |
| 30   | 30   | operation not support | 41   |
| 36   | 36   | operation not support | 37   |
| 53   | 53   | operation not support | 60   |
| 59   | 59   | operation not support | 35   |
| 59   | 59   | operation not support | 36   |
| 66   | 66   | operation not support | 1    |
| 80   | 80   | operation not support | 72   |
+------+------+-----------------------+------+
10 rows in set 

--------------
