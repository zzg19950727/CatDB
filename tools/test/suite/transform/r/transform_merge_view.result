

drop database if exists test

create database test

drop table if exists t1

drop table if exists t2

drop table if exists t3

drop table if exists t4

create table t1(c1 int, c2 int, c3 int)

create table t2(c1 int, c2 int, c3 int)

create table t3(c1 int, c2 int, c3 int)

create table t4(c1 int, c2 int, c3 int)

insert into t1 values(1,1,1)

insert into t1 values(2,2,2)

insert into t1 values(3,3,3)

insert into t1 values(4,4,4)

insert into t1 values(5,5,5)

insert into t2 select * from t1

insert into t3 select * from t1

insert into t4 select * from t1

explain select * from (select * from t1)

Query Plan:
+-------------------------------------------+
| ID | OPERATOR   | NAME | ROW COUNT | COST |
+-------------------------------------------+
| 0  | TABLE SCAN | T1   | 1         | 4    |
+-------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
MERGE(@SEL2)
END_OUTLINE_DATA
*/

select * from (select * from t1)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 1    | 1    | 1    |
| 2    | 2    | 2    |
| 3    | 3    | 3    |
| 4    | 4    | 4    |
| 5    | 5    | 5    |
+------+------+------+
5 rows in set

explain select * from (select /*+no_merge*/ * from t1)

Query Plan:
+--------------------------------------------+
| ID | OPERATOR    | NAME | ROW COUNT | COST |
+--------------------------------------------+
| 0  | VIEW        |      | 1         | 4    |
| 1  |  TABLE SCAN | T1   | 1         | 4    |
+--------------------------------------------+
Outputs & filters:
0 - output([c1], [c2], [c3])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
END_OUTLINE_DATA
*/

select * from (select /*+no_merge*/ * from t1)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 1    | 1    | 1    |
| 2    | 2    | 2    |
| 3    | 3    | 3    |
| 4    | 4    | 4    |
| 5    | 5    | 5    |
+------+------+------+
5 rows in set

explain select * from (select count(*) from t1)

Query Plan:
+------------------------------------------------+
| ID | OPERATOR        | NAME | ROW COUNT | COST |
+------------------------------------------------+
| 0  | SCALAR GROUP BY |      | 1         | 4    |
| 1  |  TABLE SCAN     | T1   | 1         | 4    |
+------------------------------------------------+
Outputs & filters:
0 - output([COUNT(1)])
aggr_exprs([COUNT(1)])

outline:
/*+
BEGIN_OUTLINE_DATA
MERGE(@SEL2)
END_OUTLINE_DATA
*/

select * from (select count(*) from t1)

+----------+
| COUNT(*) |
+----------+
| 5        |
+----------+
1 row in set

explain select count(*) from (select count(*) from t1)

Query Plan:
+--------------------------------------------------+
| ID | OPERATOR          | NAME | ROW COUNT | COST |
+--------------------------------------------------+
| 0  | SCALAR GROUP BY   |      | 1         | 4    |
| 1  |  VIEW             |      | 1         | 4    |
| 2  |   SCALAR GROUP BY |      | 1         | 4    |
| 3  |    TABLE SCAN     | T1   | 1         | 4    |
+--------------------------------------------------+
Outputs & filters:
0 - output([COUNT(1)])
aggr_exprs([COUNT(1)])
2 - output([COUNT(1)])
aggr_exprs([COUNT(1)])

outline:
/*+
BEGIN_OUTLINE_DATA
END_OUTLINE_DATA
*/

select count(*) from (select count(*) from t1)

+----------+
| COUNT(*) |
+----------+
| 1        |
+----------+
1 row in set

explain select * from (select * from t1 limit 3) limit 2

Query Plan:
+----------------------------------------------+
| ID | OPERATOR      | NAME | ROW COUNT | COST |
+----------------------------------------------+
| 0  | LIMIT         |      | 1         | 4    |
| 1  |  VIEW         |      | 1         | 4    |
| 2  |   LIMIT       |      | 1         | 4    |
| 3  |    TABLE SCAN | T1   | 1         | 4    |
+----------------------------------------------+
Outputs & filters:
0 - output([c1], [c2], [c3])
limit([2])
1 - output([c1], [c2], [c3])
2 - output([t1.c1], [t1.c2], [t1.c3])
limit([3])
3 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
END_OUTLINE_DATA
*/

select * from (select * from t1 limit 3) limit 2

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 1    | 1    | 1    |
| 2    | 2    | 2    |
+------+------+------+
2 rows in set

explain select * from (select * from (select * from t1))

Query Plan:
+-------------------------------------------+
| ID | OPERATOR   | NAME | ROW COUNT | COST |
+-------------------------------------------+
| 0  | TABLE SCAN | T1   | 1         | 4    |
+-------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
MERGE(@SEL3)
MERGE(@SEL2)
END_OUTLINE_DATA
*/

select * from (select * from (select * from t1))

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 1    | 1    | 1    |
| 2    | 2    | 2    |
| 3    | 3    | 3    |
| 4    | 4    | 4    |
| 5    | 5    | 5    |
+------+------+------+
5 rows in set

explain select * from (select /*+no_merge*/ * from (select * from t1))

Query Plan:
+--------------------------------------------+
| ID | OPERATOR    | NAME | ROW COUNT | COST |
+--------------------------------------------+
| 0  | VIEW        |      | 1         | 4    |
| 1  |  TABLE SCAN | T1   | 1         | 4    |
+--------------------------------------------+
Outputs & filters:
0 - output([c1], [c2], [c3])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
MERGE(@SEL3)
END_OUTLINE_DATA
*/

select * from (select /*+no_merge*/ * from (select * from t1))

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 1    | 1    | 1    |
| 2    | 2    | 2    |
| 3    | 3    | 3    |
| 4    | 4    | 4    |
| 5    | 5    | 5    |
+------+------+------+
5 rows in set

explain select t1.* from t1, (select * from t2)v1 where t1.c1 = v1.c1

Query Plan:
+------------------------------------------------+
| ID | OPERATOR        | NAME | ROW COUNT | COST |
+------------------------------------------------+
| 0  | HASH Inner JOIN |      | 1         | 8    |
| 1  |  TABLE SCAN     | T1   | 1         | 4    |
| 2  |  TABLE SCAN     | T2   | 1         | 4    |
+------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
equal_join_conditions([t1.c1 = t2.c1])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])
2 - output([t2.c1])
access([t2.c1])

outline:
/*+
BEGIN_OUTLINE_DATA
MERGE(@SEL2)
USE_HASH(@SEL1 t2)
LEADING(@SEL1 t1, t2)
END_OUTLINE_DATA
*/

select t1.* from t1, (select * from t2)v1 where t1.c1 = v1.c1

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 1    | 1    | 1    |
| 2    | 2    | 2    |
| 3    | 3    | 3    |
| 4    | 4    | 4    |
| 5    | 5    | 5    |
+------+------+------+
5 rows in set

explain select v1.* from (select * from t1)v1, (select * from t2) v2 where v1.c1 = v2.c1

Query Plan:
+------------------------------------------------+
| ID | OPERATOR        | NAME | ROW COUNT | COST |
+------------------------------------------------+
| 0  | HASH Inner JOIN |      | 1         | 8    |
| 1  |  TABLE SCAN     | T1   | 1         | 4    |
| 2  |  TABLE SCAN     | T2   | 1         | 4    |
+------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
equal_join_conditions([t1.c1 = t2.c1])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])
2 - output([t2.c1])
access([t2.c1])

outline:
/*+
BEGIN_OUTLINE_DATA
MERGE(@SEL2)
MERGE(@SEL3)
USE_HASH(@SEL1 t2)
LEADING(@SEL1 t1, t2)
END_OUTLINE_DATA
*/

select v1.* from (select * from t1)v1, (select * from t2) v2 where v1.c1 = v2.c1

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 1    | 1    | 1    |
| 2    | 2    | 2    |
| 3    | 3    | 3    |
| 4    | 4    | 4    |
| 5    | 5    | 5    |
+------+------+------+
5 rows in set

explain select t1.* from (select t2.* from t2, t3 where t2.c1 = t3.c1)v1 left join t1 on t1.c1 = v1.c1

Query Plan:
+-----------------------------------------------------+
| ID | OPERATOR             | NAME | ROW COUNT | COST |
+-----------------------------------------------------+
| 0  | HASH Inner JOIN      |      | 1         | 12   |
| 1  |  TABLE SCAN          | T3   | 1         | 4    |
| 2  |  HASH LeftOuter JOIN |      | 1         | 8    |
| 3  |   TABLE SCAN         | T2   | 1         | 4    |
| 4  |   TABLE SCAN         | T1   | 1         | 4    |
+-----------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
equal_join_conditions([t2.c1 = t3.c1])
1 - output([t3.c1])
access([t3.c1])
2 - output([t2.c1], [t1.c1], [t1.c2], [t1.c3])
equal_join_conditions([t1.c1 = t2.c1])
3 - output([t2.c1])
access([t2.c1])
4 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
MERGE(@SEL2)
USE_HASH(@SEL1 t1)
USE_HASH(@SEL1 t2, t1)
LEADING(@SEL1 t3, (t2, t1))
END_OUTLINE_DATA
*/

select t1.* from (select t2.* from t2, t3 where t2.c1 = t3.c1)v1 left join t1 on t1.c1 = v1.c1

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 1    | 1    | 1    |
| 2    | 2    | 2    |
| 3    | 3    | 3    |
| 4    | 4    | 4    |
| 5    | 5    | 5    |
+------+------+------+
5 rows in set

explain select t1.* from (select t2.* from t2, t3 where t2.c1 = t3.c1)v1 right join t1 on t1.c1 = v1.c1

Query Plan:
+----------------------------------------------------+
| ID | OPERATOR            | NAME | ROW COUNT | COST |
+----------------------------------------------------+
| 0  | HASH LeftOuter JOIN |      | 1         | 12   |
| 1  |  TABLE SCAN         | T1   | 1         | 4    |
| 2  |  HASH Inner JOIN    |      | 1         | 8    |
| 3  |   TABLE SCAN        | T2   | 1         | 4    |
| 4  |   TABLE SCAN        | T3   | 1         | 4    |
+----------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
equal_join_conditions([t1.c1 = t2.c1])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])
2 - output([t2.c1])
equal_join_conditions([t2.c1 = t3.c1])
3 - output([t2.c1])
access([t2.c1])
4 - output([t3.c1])
access([t3.c1])

outline:
/*+
BEGIN_OUTLINE_DATA
MERGE(@SEL2)
USE_HASH(@SEL1 t3)
USE_HASH(@SEL1 t2, t3)
LEADING(@SEL1 t1, (t2, t3))
END_OUTLINE_DATA
*/

select t1.* from (select t2.* from t2, t3 where t2.c1 = t3.c1)v1 right join t1 on t1.c1 = v1.c1

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 1    | 1    | 1    |
| 2    | 2    | 2    |
| 3    | 3    | 3    |
| 4    | 4    | 4    |
| 5    | 5    | 5    |
+------+------+------+
5 rows in set

explain select v1.* from (select t2.c1 + t3.c2 as c1, t2.c2 from t2, t3 where t2.c1 = t3.c1)v1 right join t1 on t1.c1 = v1.c1

Query Plan:
+----------------------------------------------------+
| ID | OPERATOR            | NAME | ROW COUNT | COST |
+----------------------------------------------------+
| 0  | HASH LeftOuter JOIN |      | 1         | 12   |
| 1  |  TABLE SCAN         | T1   | 1         | 4    |
| 2  |  HASH Inner JOIN    |      | 1         | 8    |
| 3  |   TABLE SCAN        | T2   | 1         | 4    |
| 4  |   TABLE SCAN        | T3   | 1         | 4    |
+----------------------------------------------------+
Outputs & filters:
0 - output([CASE WHEN t2.ROWID IS NULL THEN CAST(NULL AS NUMBER(72, 38)) ELSE t2.c1 + t3.c2 END], [t2.c2])
equal_join_conditions([t1.c1 = CASE WHEN t2.ROWID IS NULL THEN CAST(NULL AS NUMBER(72, 38)) ELSE t2.c1 + t3.c2 END])
1 - output([t1.c1])
access([t1.c1])
2 - output([t2.ROWID], [t2.c1], [t3.c2], [t2.c2])
equal_join_conditions([t2.c1 = t3.c1])
3 - output([t2.c1], [t2.ROWID], [t2.c2])
access([t2.ROWID], [t2.c1], [t2.c2])
4 - output([t3.c1], [t3.c2])
access([t3.c2], [t3.c1])

outline:
/*+
BEGIN_OUTLINE_DATA
MERGE(@SEL2)
USE_HASH(@SEL1 t3)
USE_HASH(@SEL1 t2, t3)
LEADING(@SEL1 t1, (t2, t3))
END_OUTLINE_DATA
*/

select v1.* from (select t2.c1 + t3.c2 as c1, t2.c2 from t2, t3 where t2.c1 = t3.c1)v1 right join t1 on t1.c1 = v1.c1

+------+-------+
| c1   | t2.c2 |
+------+-------+
| 2    | 1     |
| 4    | 2     |
| NULL | NULL  |
| NULL | NULL  |
| NULL | NULL  |
+------+-------+
5 rows in set

Bye
