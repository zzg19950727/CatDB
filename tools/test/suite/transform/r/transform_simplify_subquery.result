

drop database if exists test

create database test

drop table if exists t1

drop table if exists t2

drop table if exists t3

drop table if exists t4

create table t1(c1 int, c2 int, c3 int)

create table t2(c1 int, c2 int, c3 int)

create table t3(c1 int, c2 int, c3 int)

create table t4(c1 int, c2 int, c3 int)

insert into t1 values(1,1,1)

insert into t1 values(2,2,2)

insert into t1 values(3,3,3)

insert into t1 values(4,4,4)

insert into t1 values(5,5,5)

insert into t2 select * from t1

insert into t3 select * from t1

insert into t4 select * from t1

explain select * from t1 where c1 > any (select /*+no_unnest*/ c2 from t2 limit 0)

Query Plan:
+-------------------------------------------+
| ID | OPERATOR   | NAME | ROW COUNT | COST |
+-------------------------------------------+
| 0  | TABLE SCAN | T1   | 1         | 4    |
+-------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
filters([0 IS NULL])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
END_OUTLINE_DATA
*/

select * from t1 where c1 > any (select /*+no_unnest*/ c2 from t2 limit 0)

Empty set

explain select * from t1 where c1 > any (select /*+no_unnest*/ c2 from t2 limit 1)

Query Plan:
+--------------------------------------------------+
| ID | OPERATOR          | NAME | ROW COUNT | COST |
+--------------------------------------------------+
| 0  | SUBQUERY EVALUATE |      | 1         | 8    |
| 1  |  TABLE SCAN       | T1   | 1         | 4    |
| 2  |  LIMIT            |      | 1         | 4    |
| 3  |   TABLE SCAN      | T2   | 1         | 4    |
+--------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
filters([t1.c1 > ANY subquery(0)])
subquery(0) - exec_params()
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])
2 - output([t2.c2])
limit([1])
3 - output([t2.c2])
access([t2.c2])

outline:
/*+
BEGIN_OUTLINE_DATA
END_OUTLINE_DATA
*/

select * from t1 where c1 > any (select /*+no_unnest*/ c2 from t2 limit 1)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 1    | 1    | 1    |
| 1    | 1    | 1    |
| 1    | 1    | 1    |
| 1    | 1    | 1    |
+------+------+------+
4 rows in set

explain select * from t1 where c1 > all (select /*+no_unnest*/ c2 from t2 limit 1,0)

Query Plan:
+-------------------------------------------+
| ID | OPERATOR   | NAME | ROW COUNT | COST |
+-------------------------------------------+
| 0  | TABLE SCAN | T1   | 1         | 4    |
+-------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
filters([NULL IS NULL])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
END_OUTLINE_DATA
*/

select * from t1 where c1 > all (select /*+no_unnest*/ c2 from t2 limit 1,0)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 5    | 5    | 5    |
| 4    | 4    | 4    |
| 3    | 3    | 3    |
| 2    | 2    | 2    |
| 1    | 1    | 1    |
+------+------+------+
5 rows in set

explain select * from t1 where exists(select /*+no_unnest*/ c2 from t2 limit 0)

Query Plan:
+-------------------------------------------+
| ID | OPERATOR   | NAME | ROW COUNT | COST |
+-------------------------------------------+
| 0  | TABLE SCAN | T1   | 1         | 4    |
+-------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
filters([0 IS NULL])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
END_OUTLINE_DATA
*/

select * from t1 where exists(select /*+no_unnest*/ c2 from t2 limit 0)

Empty set

explain select * from t1 where not exists(select /*+no_unnest*/ c2 from t2 limit 0)

Query Plan:
+-------------------------------------------+
| ID | OPERATOR   | NAME | ROW COUNT | COST |
+-------------------------------------------+
| 0  | TABLE SCAN | T1   | 1         | 4    |
+-------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
filters([NULL IS NULL])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
END_OUTLINE_DATA
*/

select * from t1 where not exists(select /*+no_unnest*/ c2 from t2 limit 0)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 5    | 5    | 5    |
| 4    | 4    | 4    |
| 3    | 3    | 3    |
| 2    | 2    | 2    |
| 1    | 1    | 1    |
+------+------+------+
5 rows in set

explain select (select count(*) from t2 limit 1,1) as c1 from t1

Query Plan:
+-------------------------------------------+
| ID | OPERATOR   | NAME | ROW COUNT | COST |
+-------------------------------------------+
| 0  | TABLE SCAN | T1   | 1         | 4    |
+-------------------------------------------+
Outputs & filters:
0 - output(['NULL'])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
END_OUTLINE_DATA
*/

select (select count(*) from t2 limit 1,1) as c1 from t1

+--------+
| 'NULL' |
+--------+
| NULL   |
| NULL   |
| NULL   |
| NULL   |
| NULL   |
+--------+
5 rows in set

explain select (select count(*) from t2 limit 1) as c1 from t1

Query Plan:
+--------------------------------------------------------+
| ID | OPERATOR               | NAME  | ROW COUNT | COST |
+--------------------------------------------------------+
| 0  | NESTED LOOP Inner JOIN |       | 1         | 12   |
| 1  |  VIEW                  | VIEW1 | 1         | 4    |
| 2  |   SCALAR GROUP BY      |       | 1         | 4    |
| 3  |    TABLE SCAN          | T2    | 1         | 4    |
| 4  |  TABLE SCAN            | T1    | 1         | 4    |
+--------------------------------------------------------+
Outputs & filters:
0 - output([VIEW1.C1])
1 - output([VIEW1.C1])
2 - output([COUNT(1)])
aggr_exprs([COUNT(1)])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
UNNEST(@SEL2)
USE_NL(@SEL1 t1)
LEADING(@SEL1 VIEW1, t1)
END_OUTLINE_DATA
*/

select (select count(*) from t2 limit 1) as c1 from t1

+------+
| c1   |
+------+
| 5    |
| 5    |
| 5    |
| 5    |
| 5    |
+------+
5 rows in set

explain select * from t1 where c1 > any (select /*+no_unnest*/ count(*) from t2)

Query Plan:
+--------------------------------------------------+
| ID | OPERATOR          | NAME | ROW COUNT | COST |
+--------------------------------------------------+
| 0  | SUBQUERY EVALUATE |      | 1         | 8    |
| 1  |  TABLE SCAN       | T1   | 1         | 4    |
| 2  |  SCALAR GROUP BY  |      | 1         | 4    |
| 3  |   TABLE SCAN      | T2   | 1         | 4    |
+--------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
filters([t1.c1 > subquery(0)])
subquery(0) - exec_params()
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])
2 - output([COUNT(1)])
aggr_exprs([COUNT(1)])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
END_OUTLINE_DATA
*/

select * from t1 where c1 > any (select /*+no_unnest*/ count(*) from t2)

Empty set

explain select * from t1 where c1 > all (select /*+no_unnest*/ sum(c2) from t2)

Query Plan:
+--------------------------------------------------+
| ID | OPERATOR          | NAME | ROW COUNT | COST |
+--------------------------------------------------+
| 0  | SUBQUERY EVALUATE |      | 1         | 8    |
| 1  |  TABLE SCAN       | T1   | 1         | 4    |
| 2  |  SCALAR GROUP BY  |      | 1         | 4    |
| 3  |   TABLE SCAN      | T2   | 1         | 4    |
+--------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
filters([t1.c1 > subquery(0)])
subquery(0) - exec_params()
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])
2 - output([SUM(t2.c2)])
aggr_exprs([SUM(t2.c2)])
3 - output([t2.c2])
access([t2.c2])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
END_OUTLINE_DATA
*/

select * from t1 where c1 > all (select /*+no_unnest*/ sum(c2) from t2)

Empty set

explain select * from t1 where exists(select /*+no_unnest*/ max(c2) from t2)

Query Plan:
+-------------------------------------------+
| ID | OPERATOR   | NAME | ROW COUNT | COST |
+-------------------------------------------+
| 0  | TABLE SCAN | T1   | 1         | 4    |
+-------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
filters([NULL IS NULL])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
END_OUTLINE_DATA
*/

select * from t1 where exists(select /*+no_unnest*/ max(c2) from t2)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 5    | 5    | 5    |
| 4    | 4    | 4    |
| 3    | 3    | 3    |
| 2    | 2    | 2    |
| 1    | 1    | 1    |
+------+------+------+
5 rows in set

explain select * from t1 where not exists(select /*+no_unnest*/ min(c2) from t2)

Query Plan:
+-------------------------------------------+
| ID | OPERATOR   | NAME | ROW COUNT | COST |
+-------------------------------------------+
| 0  | TABLE SCAN | T1   | 1         | 4    |
+-------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
filters([0 IS NULL])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
END_OUTLINE_DATA
*/

select * from t1 where not exists(select /*+no_unnest*/ min(c2) from t2)

Empty set

explain select * from t1 where exists(select 1 from t2 order by c1 limit 10)

Query Plan:
+----------------------------------------------------------+
| ID | OPERATOR                  | NAME | ROW COUNT | COST |
+----------------------------------------------------------+
| 0  | NESTED LOOP LeftSemi JOIN |      | 1         | 12   |
| 1  |  TABLE SCAN               | T1   | 1         | 4    |
| 2  |  TABLE SCAN               | T2   | 1         | 4    |
+----------------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
UNNEST(@SEL2)
MERGE(@SEL2)
USE_NL(@SEL1 t2)
LEADING(@SEL1 t1, t2)
END_OUTLINE_DATA
*/

select * from t1 where exists(select 1 from t2 order by c1 limit 10)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 5    | 5    | 5    |
| 4    | 4    | 4    |
| 3    | 3    | 3    |
| 2    | 2    | 2    |
| 1    | 1    | 1    |
+------+------+------+
5 rows in set

explain select * from t1 where exists(select c1, sum(c2) from t2 group by c1 having count(*) > 0)

Query Plan:
+-----------------------------------------------------------+
| ID | OPERATOR                  | NAME  | ROW COUNT | COST |
+-----------------------------------------------------------+
| 0  | NESTED LOOP LeftSemi JOIN |       | 1         | 12   |
| 1  |  TABLE SCAN               | T1    | 1         | 4    |
| 2  |  VIEW                     | VIEW1 | 1         | 4    |
| 3  |   HASH GROUP BY           |       | 1         | 4    |
| 4  |    TABLE SCAN             | T2    | 1         | 4    |
+-----------------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])
3 - output([1])
filters([COUNT(1) > 0])
group_by_exprs([t2.c1])
aggr_exprs([COUNT(1)])
4 - output([t2.c1])
access([t2.c1])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
UNNEST(@SEL2)
USE_NL(@SEL1 VIEW1)
LEADING(@SEL1 t1, VIEW1)
END_OUTLINE_DATA
*/

select * from t1 where exists(select c1, sum(c2) from t2 group by c1 having count(*) > 0)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 5    | 5    | 5    |
| 4    | 4    | 4    |
| 3    | 3    | 3    |
| 2    | 2    | 2    |
| 1    | 1    | 1    |
+------+------+------+
5 rows in set

explain select * from t1 where exists(select c1, sum(c2) from t2 group by c1)

Query Plan:
+----------------------------------------------------------+
| ID | OPERATOR                  | NAME | ROW COUNT | COST |
+----------------------------------------------------------+
| 0  | NESTED LOOP LeftSemi JOIN |      | 1         | 12   |
| 1  |  TABLE SCAN               | T1   | 1         | 4    |
| 2  |  TABLE SCAN               | T2   | 1         | 4    |
+----------------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
UNNEST(@SEL2)
MERGE(@SEL2)
USE_NL(@SEL1 t2)
LEADING(@SEL1 t1, t2)
END_OUTLINE_DATA
*/

select * from t1 where exists(select c1, sum(c2) from t2 group by c1)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 5    | 5    | 5    |
| 4    | 4    | 4    |
| 3    | 3    | 3    |
| 2    | 2    | 2    |
| 1    | 1    | 1    |
+------+------+------+
5 rows in set

explain select * from t1 where c1 > any(select sum(c2) from t2 group by c1)

Query Plan:
+-----------------------------------------------------------+
| ID | OPERATOR                  | NAME  | ROW COUNT | COST |
+-----------------------------------------------------------+
| 0  | NESTED LOOP LeftSemi JOIN |       | 1         | 12   |
| 1  |  TABLE SCAN               | T1    | 1         | 4    |
| 2  |  VIEW                     | VIEW1 | 1         | 4    |
| 3  |   HASH GROUP BY           |       | 1         | 4    |
| 4  |    TABLE SCAN             | T2    | 1         | 4    |
+-----------------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
other_join_conditions([t1.c1 > VIEW1.C1])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])
2 - output([VIEW1.C1])
3 - output([SUM(t2.c2)])
group_by_exprs([t2.c1])
aggr_exprs([SUM(t2.c2)])
4 - output([t2.c1], [t2.c2])
access([t2.c2], [t2.c1])

outline:
/*+
BEGIN_OUTLINE_DATA
UNNEST(@SEL2)
USE_NL(@SEL1 VIEW1)
LEADING(@SEL1 t1, VIEW1)
END_OUTLINE_DATA
*/

select * from t1 where c1 > any(select sum(c2) from t2 group by c1)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 5    | 5    | 5    |
| 4    | 4    | 4    |
| 3    | 3    | 3    |
| 2    | 2    | 2    |
+------+------+------+
4 rows in set

explain select * from t1 where exists(select distinct c1 from t2)

Query Plan:
+----------------------------------------------------------+
| ID | OPERATOR                  | NAME | ROW COUNT | COST |
+----------------------------------------------------------+
| 0  | NESTED LOOP LeftSemi JOIN |      | 1         | 12   |
| 1  |  TABLE SCAN               | T1   | 1         | 4    |
| 2  |  TABLE SCAN               | T2   | 1         | 4    |
+----------------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
UNNEST(@SEL2)
MERGE(@SEL2)
USE_NL(@SEL1 t2)
LEADING(@SEL1 t1, t2)
END_OUTLINE_DATA
*/

select * from t1 where exists(select distinct c1 from t2)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 5    | 5    | 5    |
| 4    | 4    | 4    |
| 3    | 3    | 3    |
| 2    | 2    | 2    |
| 1    | 1    | 1    |
+------+------+------+
5 rows in set

explain select * from t1 where exists(select c1 from t2 union select c2 from t3)

Query Plan:
+-----------------------------------------------------------+
| ID | OPERATOR                  | NAME  | ROW COUNT | COST |
+-----------------------------------------------------------+
| 0  | NESTED LOOP LeftSemi JOIN |       | 1         | 20   |
| 1  |  TABLE SCAN               | T1    | 1         | 4    |
| 2  |  VIEW                     | VIEW1 | 2         | 8    |
| 3  |   UNION_ALL               |       | 2         | 8    |
| 4  |    TABLE SCAN             | T2    | 1         | 4    |
| 5  |    TABLE SCAN             | T3    | 1         | 4    |
+-----------------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])
3 - output([1])
4 - output([1])
5 - output([1])

outline:
/*+
BEGIN_OUTLINE_DATA
SIMPLIFY_SQ(@SEL2)
UNNEST(@SEL2)
USE_NL(@SEL1 VIEW1)
LEADING(@SEL1 t1, VIEW1)
END_OUTLINE_DATA
*/

select * from t1 where exists(select c1 from t2 union select c2 from t3)

+------+------+------+
| c1   | c2   | c3   |
+------+------+------+
| 5    | 5    | 5    |
| 4    | 4    | 4    |
| 3    | 3    | 3    |
| 2    | 2    | 2    |
| 1    | 1    | 1    |
+------+------+------+
5 rows in set

explain select * from t1 where exists(select c1, c2 from t2 intersect select c2,c3 from t3)

Query Plan:
+-----------------------------------------------------------+
| ID | OPERATOR                  | NAME  | ROW COUNT | COST |
+-----------------------------------------------------------+
| 0  | NESTED LOOP LeftSemi JOIN |       | 1         | 21   |
| 1  |  TABLE SCAN               | T1    | 1         | 4    |
| 2  |  VIEW                     | VIEW1 | 2         | 8    |
| 3  |   INTERSECT               |       | 2         | 8    |
| 4  |    TABLE SCAN             | T2    | 1         | 4    |
| 5  |    TABLE SCAN             | T3    | 1         | 4    |
+-----------------------------------------------------------+
Outputs & filters:
0 - output([t1.c1], [t1.c2], [t1.c3])
1 - output([t1.c1], [t1.c2], [t1.c3])
access([t1.c1], [t1.c2], [t1.c3])
3 - output([INTERSECT(0)])
4 - output([t2.c1], [t2.c2])
access([t2.c1], [t2.c2])
5 - output([t3.c2], [t3.c3])
access([t3.c2], [t3.c3])

outline:
/*+
BEGIN_OUTLINE_DATA
UNNEST(@SEL2)
USE_NL(@SEL1 VIEW1)
LEADING(@SEL1 t1, VIEW1)
END_OUTLINE_DATA
*/

select * from t1 where exists(select c1,c2 from t2 intersect select c2,c3 from t3)

Empty set

Bye
